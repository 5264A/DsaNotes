
Given an ascending sorted rotated array Arr of distinct integers of size N. The array is right rotated K times. Find the value of K.

Example 1:

Input:
N = 5
Arr[] = {5, 1, 2, 3, 4}
Output: 1
Explanation: The given array is 5 1 2 3 4. 
The original sorted array is 1 2 3 4 5. 
We can see that the array was rotated 
1 times to the right.
Example 2:

Input:
N = 5
Arr[] = {1, 2, 3, 4, 5}
Output: 0
Explanation: The given array is not rotated.

....................................................................................................................................................


class Solution{
public:	
	int findKRotation(int arr[], int n) {
	   int s=0;
	   int e=n-1;
	   int mid=s+(e-s)/2;int ans=-1;
	   while(s<=e){
	       if(arr[mid]<arr[n-1]){
	           e=mid-1;
	       }
	       else if(arr[mid]>arr[mid-1]&& arr[mid]>arr[mid+1]){
	          return mid+1;
	       }
	       else {
	           s=mid+1;
	       }mid=s+(e-s)/2;
	   }
	   return ans+1;
	}

};
