Given an integer x, find the square root of x. If x is not a perfect square, then return floor(âˆšx).

 

Example 1:

Input:
x = 5
Output: 2
Explanation: Since, 5 is not a perfect 
square, floor of square_root of 5 is 2.
Example 2:

Input:
x = 4
Output: 2
Explanation: Since, 4 is a perfect 
square, so its square root is 2.



.........................................................................................................................
.........................................................................................................................

class Solution{
  public:
    long long int floorSqrt(long long int x) 
    {
        int n=1;
        while(n*n <= x){
            n=n+1;
        }
        return n-1;
    }
};
...............................................................................................................


  int binarysearch(long long int N){
    int s=0;
     int e=N;
    int ans=-1;
    long long int mid=s+(e-s)/2;
    while(s<=e){
        if(mid*mid==N){
            return mid;
        }
        else if(mid*mid>N){
            e=mid-1;
        }
        else if(mid*mid<N){
            ans=mid;
            s=mid+1;
        }
        mid=s+(e-s)/2;
    }
    return  ans;
}
    int mySqrt(int x) {
        return binarysearch(x);
    }
