Given two integers L and R find (number of composites - number of primes) between the range L and R (both inclusive).

Example 1:

Input: L = 4, R = 6
Output: 1
Explanation: Composite no. are 4 and 6.
And prime is 5.

Example 2:

Input: L = 4, R = 4
Output: 1
Explanation: There is no prime no. in [L,R]
 

Your Task:
You don't need to read or print anything. Your task is to complete the function Count() which takes L and R as input parameter and returns difference between no. of composites and primes between [L,R].
 

Expected Time Complexity: O(nlog(n)) where n = R - L + 1
Expected Space Complexity: O(n)
......................................................................................................................................................................

	public:
	bool isprime(int n){
	    if(n==1 ||n==0){
	        return false;
	    }
	    if(n==2){
	        return true;
	    }
	    for(int i=2;i*i<=n;i++){
	        if(n%i==0){
	            return false;
	        }
	    }
	    return true;
	}
		int Count(int L, int R){
		    int il=0;int j=0;
		    for(int i=max(L,2);i<=R;i++){
		        if(isprime(i)){
		            il++;
		        }
		        else{
		            j++;
		        }
		    }
		    return j-il;
		}
