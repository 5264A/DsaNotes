Given a number N, the task is to find the largest prime factor of that number.
 

Example 1:

Input:
N = 5
Output:
5
Explanation:
5 has 1 prime factor 
i.e 5 only.
Example 2:

Input:
N = 24
Output:
3
Explanation:
24 has 2 prime factors 
3 and 2 in which 3 is 
greater

Your Task:
You don't need to read input or print anything. Your task is to complete the function largestPrimeFactor() which takes an integer N as input parameters and returns an integer, largest prime factor of N.
 

Expected Time Complexity: O(sqrt(N))
Expected Space Complexity: O(1)
 

Constraints:
2 <= N <= 10^5
................................................................................................................................................................



bool isprime(long long int N){
    if(N==1 || N==0){
        return false;
    }
    for(int i=2;i*i<=N;i++){
        if(N%i==0){
            return false;
            break;
        }
    }return true;
}
    long long int largestPrimeFactor(int N){
       
       vector<long long int>v;long long int mini=INT_MIN;
       if(N==1 || N==0){
           return N;
       }
       for(int i=2;i<=(N)/2;i++){
         if(N%i==0){
             if(isprime(i)){
                 v.push_back(i);
             }
         }
       }
       sort(v.begin(),v.end());
       if(v.size()==0){
           return N;
       }
       else{
           return v[v.size()-1];
       }
      
       
         
    }
    
    .................................................................
    2nd ansdeasy solution
         int i=2;
       while(n!=1){
           if(n%i==0){
               n/=i;
           }
           else{
               i++;
           }
       }
       return (long long int)i;
