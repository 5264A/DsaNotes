Given a string S consisting of lowercase Latin Letters. Return the first non-repeating character in S. If there is no non-repeating character, return '$'.

Example 1:

Input:
S = hello
Output: h
Explanation: In the given string, the
first character which is non-repeating
is h, as it appears first and there is
no other 'h' in the string.
Example 2:

Input:
S = zxvczbtxyzvy
Output: c
Explanation: In the given string, 'c' is
the character which is non-repeating. 
Your Task:
You only need to complete the function nonrepeatingCharacter() that takes string S as a parameter and returns the character. If there is no non-repeating character then return '$' .

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(Number of distinct characters).
Note: N = |S|
......................................................................................................................................................

  char nonrepeatingCharacter(string S)
    {
       long long int n=S.size();
       unordered_map<int,int>mp;
       for(int i=0;i<n;i++){
           mp[S[i]]++;
       }
       for(int i=0;i<n;i++){
           if(mp[S[i]]==1){
               return S[i];
               break;
           }
       }return '$';
       
    }
