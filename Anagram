 Given two strings a and b consisting of lowercase characters. The task is to check whether two given strings are an anagram of each other or not. An anagram of a string is another string that contains the same characters, only the order of characters can be different. For example, act and tac are an anagram of each other.

Note :- If the strings are anagrams you have to return True or else return False

Example 1:

Input:a = geeksforgeeks, b = forgeeksgeeks
Output: YES
Explanation: Both the string have same characters with
        same frequency. So, both are anagrams.
Example 2:

Input:a = allergy, b = allergic
Output: NO
Explanation: Characters in both the strings are 
        not same, so they are not anagrams.
Your Task:
You don't need to read input or print anything. Your task is to complete the function isAnagram() which takes the string a and string b as input parameter and check if the two strings are an anagram of each other. The function returns true if the strings are anagram else it returns false.

Note: In python, you have to return True or False.

Expected Time Complexity:O(|a|+|b|).
Expected Auxiliary Space:O(Number of distinct characters).
....................................................................................................................................................
 
 
 
 
 bool isAnagram(string a, string b){
        int n=a.size();
        int m=b.size();
        if(n!=m){
            return false;
        }
        map<char,int>mp1;
        map<char,int>mp2;
        for(int i=0;i<n;i++){
           mp1[a[i]]++;
        }
        for(int i=0;i<m;i++){
         if(mp1.find(b[i])==mp1.end()||mp1[b[i]]==0){
             return false;
         }else{
             mp1[b[i]]--;
         }
        }return true;
       
        
        
    }
