Problem Statement
Detailed explanation ( Input/output format, Notes, Constraints, Images )
Sample Input 1:
1 
Problem Statement
Detailed explanation ( Input/output format, Notes, Constraints, Images )
Sample Input 1:
1 
abc
Sample Output 1:
a ab abc ac b bc c
Explanation Of Sample Input 1:
All possible subsequences of abc are :  
“a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”
Sample Input 2:
1
bbb
Sample Output 2:
b b b bb bb bb bbbabc////NOT ANY EMPTY STRING CONTAINS................................................................................................................
......................................................................................................................................................................


#include <bits/stdc++.h> 
#include<vector>
void solve(string str,string output,int index,vector<string>&ans){
	
	if(index>=str.size()){
          if (output.size() > 0) {
            ans.push_back(output);
          }return ;
	}
	solve(str,output,index+1,ans);
	char element=str[index];
	output.push_back(element);
	solve(str,output,index+1,ans);
}
vector<string> subsequences(string str){
	
vector<string>ans;
int index=0;
string output="";
solve(str,output,index,ans);
return ans;

	
}
