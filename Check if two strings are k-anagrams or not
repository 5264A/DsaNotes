Given two strings of lowercase alphabets and a value K, your task is to complete the given function which tells if  two strings are K-anagrams of each other or not.

Two strings are called K-anagrams if both of the below conditions are true.
1. Both have same number of characters.
2. Two strings can become anagram by changing at most K characters in a string.

Example:

Input:
str1 = "fodr", str2="gork"
k = 2
Output:
1
Explanation: Can change fd to gk
Your Task:
Since this is a function problem, you don't need to take any input. Just complete the given function areKAnagrams that returns true if the strings can be turned into K-anagrams, else return false.

Constraints:
1 ≤ length of String ≤ 105
1 ≤ K ≤ length of String
.............................................................................................................................................................................


 bool areKAnagrams(string str1, string str2, int k) {
        if(str1.size()!=str2.size()){
            return false;
        }
     map<char,int>mp;
     for(auto s:str1){
         mp[s]++;
     }
     for(auto s:str2){
         if(mp.count(s)!=0){
             mp[s]--;
         }
     }
     int cnt=0;
     for(auto it:mp){
         if(it.second>0){
             cnt+=it.second;
         }
     }
     if(cnt<=k){
         return true;
     }return false;
       
    }
